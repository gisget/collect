/**
 * Generated by Gas3 v2.2.0 (Granite Data Services).
 *
 * NOTE: this file is only generated if it does not exist. You may safely put
 * your custom code here.
 */

package org.openforis.collect.metamodel.proxy {
	import flash.utils.Dictionary;
	
	import mx.collections.ArrayCollection;
	import mx.collections.IList;
	
	import org.openforis.collect.util.ArrayUtil;

    [Bindable]
    [RemoteClass(alias="org.openforis.collect.metamodel.proxy.SchemaProxy")]
    public class SchemaProxy extends SchemaProxyBase {
		
		private var _survey:SurveyProxy;
		
		private var _definitionsMap:Dictionary;
		
		public function init():void {
			_definitionsMap = new Dictionary();
			traverse(initDefinition);
		}
		
		public function traverse(funct:Function):void {
			var stack:Array = new Array();
			ArrayUtil.addAll(stack, rootEntityDefinitions.toArray());
			while ( stack.length > 0 ) {
				var defn:NodeDefinitionProxy = NodeDefinitionProxy(stack.pop());
				funct(defn);
				if ( defn is EntityDefinitionProxy ) {
					var children:IList = EntityDefinitionProxy(defn).childDefinitions;
					ArrayUtil.addAll(stack, children.toArray());
				}
			}
		}
		
		protected function initDefinition(defn:NodeDefinitionProxy):void {
			defn.survey = this.survey;
			//add definition to map
			_definitionsMap[defn.id] = defn;
		}
		
		public function getDefinitionById(id:int):NodeDefinitionProxy {
			return _definitionsMap[id];
		}

		public function getKeyAttributeDefinitions(rootEntity:EntityDefinitionProxy):IList {
			var result:ArrayCollection = new ArrayCollection();
			var keyDefnIds:IList = keyAttributeDefinitionIdsByRootEntityId.get(rootEntity.id);
			for each (var id:int in keyDefnIds) {
				var keyDefn:NodeDefinitionProxy = getDefinitionById(id);
				result.addItem(keyDefn);
			}
			return result;
		}
		
		public function get mainRootEntityDefinition():EntityDefinitionProxy {
			return rootEntityDefinitions.getItemAt(0) as EntityDefinitionProxy;
		}
		
		public function get survey():SurveyProxy {
			return _survey;
		}

		public function set survey(value:SurveyProxy):void {
			_survey = value;
		}

		
    }
}