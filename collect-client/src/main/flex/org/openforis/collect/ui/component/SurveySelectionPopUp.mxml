<?xml version="1.0" encoding="utf-8"?>
<component:PopUp xmlns:fx="http://ns.adobe.com/mxml/2009" 
				 xmlns:s="library://ns.adobe.com/flex/spark" 
				 xmlns:mx="library://ns.adobe.com/flex/mx"
				 xmlns:component="org.openforis.collect.ui.component.*"
				 width="500"
				 title="{Message.get('surveySelection.popUp.title')}"
				 >
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import org.openforis.collect.i18n.Message;
			import org.openforis.collect.presenter.SurveySelectionPresenter;
			
			public static const DEFAULT_STATE:String = "default";
			public static const LOADING_STATE:String = "loading";
			public static const LOADING_ROOT_ENTITIES_STATE:String = "loadingRootEntities";
			public static const SINGLE_ROOT_ENTITY_LOADED_STATE:String = "singleRootEntityLoaded";
			public static const MULTIPLE_ROOT_ENTITIES_LOADED_STATE:String = "multipleRootEntitiesLoaded";
			
			private var _presenter:SurveySelectionPresenter;
			
			private var _automaticallySelect:Boolean = false;
			
			override protected function creationCompleteHandler(event:FlexEvent):void {
				super.creationCompleteHandler(event);
				_presenter = new SurveySelectionPresenter(this);
				_presenter.init();
			}
			
			public function get automaticallySelect():Boolean {
				return _automaticallySelect;
			}

			public function set automaticallySelect(value:Boolean):void {
				_automaticallySelect = value;
			}
			
		]]>
	</fx:Script>
	
	<component:layout>
		<s:VerticalLayout horizontalAlign="center" />
	</component:layout>

	<component:states>
		<s:State name="default" />
		<s:State name="loading" />
		<s:State name="loadingRootEntities" />
		<s:State name="singleRootEntityLoaded" />
		<s:State name="multipleRootEntitiesLoaded" />
	</component:states>
	
	<component:LoadingContent width="100%" height="100%" includeIn="loading" 
							  itemCreationPolicy="immediate"/>
	
	<s:Group height="100%" width="100%">
		<s:VGroup horizontalCenter="0" horizontalAlign="center" gap="30">
			<s:Form>
				<s:FormItem label="{Message.get('surveySelection.survey')}">
					<s:DropDownList id="surveyDDL" labelField="name"
									width="350" />
				</s:FormItem>
				<s:FormItem id="rootEntityFormItem"
					label="{Message.get('surveySelection.rootEntity')}" 
					includeInLayout="false" 
					includeInLayout.multipleRootEntitiesLoaded="true"
					visible="false"
					visible.multipleRootEntitiesLoaded="true" >
					<s:DropDownList id="rootEntityDDL" labelField="name"
									width="200" />
				</s:FormItem>
			</s:Form>
			<s:HGroup gap="30" paddingBottom="30">
				<s:Button id="okButton" label="{Message.get('surveySelection.ok')}"
						  useHandCursor="true" buttonMode="true"
						  enabled.loadingRootEntities="false"
						  />
			</s:HGroup>
		</s:VGroup>
	</s:Group>
</component:PopUp>
