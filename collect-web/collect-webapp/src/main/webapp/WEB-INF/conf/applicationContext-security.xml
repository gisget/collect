<?xml version="1.0" encoding="UTF-8"?>
<b:beans 
	xmlns:b="http://www.springframework.org/schema/beans" 
	xmlns="http://www.springframework.org/schema/security" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security-4.2.xsd
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        ">

	<!-- Enables Method Security and Expression-based access control -->
<!-- 	<global-method-security pre-post-annotations="enabled" secured-annotations="enabled" access-decision-manager-ref="methodAccessDecisionManager" > -->
<!-- 		<expression-handler ref="expressionHandler"  /> -->
<!-- 		<protect-pointcut expression="execution(* org.openforis.collect.remoting.service.*Service.*(..))" access="ROLE_USER" /> -->
<!-- 	</global-method-security> -->
	
	<http access-decision-manager-ref="accessDecisionManager">
		<csrf disabled="true"/>
		<headers>
			<frame-options policy="SAMEORIGIN"/>
		</headers>
		
		<intercept-url access="permitAll" pattern="collect.swf" />
		<intercept-url access="permitAll" pattern="/assets/**" />
		<intercept-url access="permitAll" pattern="/earthFiles/**"  />
		<intercept-url access="permitAll" pattern="/images/**" />
		<intercept-url access="permitAll" pattern="/js/**" />
		<intercept-url access="permitAll" pattern="/script/**" />
		<intercept-url access="permitAll" pattern="/default-password-active.json" />
		<intercept-url access="permitAll" pattern="/downloadLogo.htm" />
		<intercept-url access="permitAll" pattern="/info.json" />
		<intercept-url access="permitAll" pattern="/keepSessionAlive.htm" />
		<intercept-url access="permitAll" pattern="/login" />
		<intercept-url access="permitAll" pattern="/logout.htm" />
		<intercept-url access="permitAll" pattern="/session/**" />
		<intercept-url access="permitAll" pattern="/survey/summaries.json" />
		<intercept-url access="permitAll" pattern="/zkau" />
<!-- 		security disabled for these urls because of an issue with flash player -->
<!-- 		for netscape compatible browser and uplaod to a secured url -->
		<intercept-url access="permitAll" pattern="/uploadData.htm" />
		<intercept-url access="permitAll" pattern="/uploadFile.htm" />
		
		<intercept-url access="hasRole('ROLE_USER')" pattern="/ng/**" />
		
		<intercept-url access="hasRole('ROLE_USER') or hasIpAddress('127.0.0.1')" pattern="/command/**" />

		<intercept-url access="hasRole('ROLE_ADMIN')" pattern="/codelist/export/**/*" />
		<intercept-url access="hasRole('ROLE_ADMIN')" pattern="/codelist/import/**/*" />
		<intercept-url access="hasRole('ROLE_ADMIN')" pattern="/designer.htm" />
		<intercept-url access="hasRole('ROLE_ADMIN')" pattern="/editSurvey.htm" />
		<intercept-url access="hasRole('ROLE_ADMIN')" pattern="/importSurvey.htm" />
		<intercept-url access="hasRole('ROLE_ADMIN')" pattern="/logoUpload" />
		<intercept-url access="hasRole('ROLE_ADMIN')" pattern="/rdbpublish" />
		<intercept-url access="hasRole('ROLE_ADMIN')" pattern="/saiku/**/*" />
		<intercept-url access="hasRole('ROLE_ADMIN')" pattern="/samplingdesign/export/*" />
		<intercept-url access="hasRole('ROLE_ADMIN')" pattern="/samplingdesign/import/*" />
		<intercept-url access="hasRole('ROLE_ADMIN')" pattern="/species/export/*" />
		<intercept-url access="hasRole('ROLE_ADMIN')" pattern="/species/import/*" />
		<intercept-url access="hasRole('ROLE_ADMIN')" pattern="/speciesImport" />
		<intercept-url access="hasRole('ROLE_ADMIN') or hasIpAddress('127.0.0.1')" pattern="/survey/**" />
		<intercept-url access="hasRole('ROLE_ADMIN')" pattern="/validateAllRecords.htm" />
		
		<intercept-url access="hasRole('ROLE_USER')" pattern="/**" />

		<form-login login-page="/login" 
			default-target-url="/index.htm"
			authentication-failure-url="/login?login_error=1" />
		
		<logout logout-url="/j_spring_security_logout" />
	</http>
	
	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="collectAuthenticationProvider" />
	</authentication-manager>

	<!-- See 15.3.2 Built-In Expression @http://static.springsource.org/spring-security/site/docs/3.0.x/reference/el-access.html#el-permission-evaluator -->
	<b:bean id="expressionHandler" class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
		<!-- To use hasPermission() in expressions, configure a PermissionEvaluator -->
		<!-- <b:property name="permissionEvaluator" ref="permissionEvaluator" /> -->
		<b:property name="roleHierarchy" ref="roleHierarchy" />
	</b:bean>

	<b:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
		<b:constructor-arg>
			<b:list>
				<b:bean class="org.springframework.security.web.access.expression.WebExpressionVoter">
					<b:property name="expressionHandler">
						<b:bean class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler">
							<b:property name="roleHierarchy" ref="roleHierarchy" />
						</b:bean>
					</b:property>
				</b:bean>
			</b:list>
		</b:constructor-arg>
	</b:bean>

	<b:bean id="methodAccessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
		<b:constructor-arg>
			<b:list>
				<b:ref bean="roleVoter" />
			</b:list>
		</b:constructor-arg>
	</b:bean>
	
	<b:bean id="roleVoter" class="org.springframework.security.access.vote.RoleHierarchyVoter">
		<b:constructor-arg ref="roleHierarchy" />
	</b:bean>

	<b:bean id="roleHierarchy" class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
		<b:property name="hierarchy">
			<b:value>
				ROLE_ADMIN > ROLE_ANALYSIS
				ROLE_ANALYSIS > ROLE_CLEANSING
				ROLE_CLEANSING > ROLE_ENTRY
				ROLE_ENTRY > ROLE_ENTRY_LIMITED
				ROLE_ENTRY_LIMITED > ROLE_USER
				ROLE_VIEW > ROLE_USER
				ROLE_USER > ROLE_GUEST
			</b:value>
		</b:property>
	</b:bean>

	<b:bean id="authenticatedVoter" class="org.springframework.security.access.vote.AuthenticatedVoter" />
	
</b:beans>