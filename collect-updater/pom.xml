<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.openforis.collect</groupId>
		<artifactId>collect</artifactId>
		<version>3.13.5-SNAPSHOT</version>
	</parent>
	<artifactId>collect-updater</artifactId>
	<packaging>pom</packaging>
	<name>Open Foris Collect Updater</name>
	<description>Module to create the updaters for Open Foris Collect</description>

	<properties>
		<!-- to avoid replacing relative path to images and other resources used 
			by the installer -->
		<installer-build-path>${project.build.directory}/installer</installer-build-path>
		<installbuilder-updater-file-name>installbuilder-updater.xml</installbuilder-updater-file-name>
		<autoupdate-xml-file-name>update.xml</autoupdate-xml-file-name>
		<installbuilder.project.name>OpenForisCollectUpdater</installbuilder.project.name>
	</properties>

	<profiles>
		<profile>
			<id>installer</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<!-- 2. copy autoupdater and contolpanel -->
							<execution>
								<id>copy-other-artifacts</id>
								<phase>process-sources</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<artifactItems>
										<!-- Collect WebApp -->
										<artifactItem>
											<groupId>org.openforis.collect</groupId>
											<artifactId>collect-webapp-jetty</artifactId>
											<version>${project.version}</version>
											<type>war</type>
											<overWrite>false</overWrite>
											<outputDirectory>${installer-build-path}/webapps</outputDirectory>
											<destFileName>collect.war</destFileName>
										</artifactItem>
										<!-- Libraries -->
										<artifactItem>
											<groupId>commons-dbcp</groupId>
											<artifactId>commons-dbcp</artifactId>
											<version>1.4</version>
											<type>jar</type>
											<overWrite>false</overWrite>
											<outputDirectory>${installer-build-path}/lib</outputDirectory>
										</artifactItem>
										<artifactItem>
											<groupId>commons-pool</groupId>
											<artifactId>commons-pool</artifactId>
											<version>1.5.4</version>
											<type>jar</type>
											<overWrite>false</overWrite>
											<outputDirectory>${installer-build-path}/lib</outputDirectory>
										</artifactItem>
										<artifactItem>
											<groupId>com.h2database</groupId>
											<artifactId>h2</artifactId>
											<version>1.4.193</version>
											<type>jar</type>
											<overWrite>false</overWrite>
											<outputDirectory>${installer-build-path}/lib</outputDirectory>
										</artifactItem>
										<artifactItem>
											<groupId>org.xerial</groupId>
											<artifactId>sqlite-jdbc</artifactId>
											<version>3.7.2</version>
											<type>jar</type>
											<overWrite>false</overWrite>
											<outputDirectory>${installer-build-path}/lib</outputDirectory>
										</artifactItem>
										<artifactItem>
											<groupId>postgresql</groupId>
											<artifactId>postgresql</artifactId>
											<version>9.1-901.jdbc4</version>
											<type>jar</type>
											<overWrite>false</overWrite>
											<outputDirectory>${installer-build-path}/lib</outputDirectory>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
							<execution>
								<id>copy-control-panel-dependencies</id>
								<phase>process-sources</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
								<configuration>
									<outputDirectory>${installer-build-path}/lib</outputDirectory>
									<includeScope>compile</includeScope>
								</configuration>
							</execution>
						</executions>
					</plugin>
		
					<!-- 2. copy resource files -->
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.6</version>
						<executions>
							<execution>
								<id>copy-installbuilder-source-file</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${installer-build-path}</outputDirectory>
									<resources>
										<resource>
											<directory>src/main/resources</directory>
											<includes>
												<include>**</include>
											</includes>
										</resource>
									</resources>
									<overwrite>true</overwrite>
								</configuration>
							</execution>
						</executions>
					</plugin>
		
					<!-- 3.a replace application version and jre version into the autoupdate xml file (remotely uploaded)
						and into the xml installbuilder source file -->
					<plugin>
						<groupId>com.google.code.maven-replacer-plugin</groupId>
						<artifactId>replacer</artifactId>
						<executions>
							<execution>
								<phase>prepare-package</phase>
								<goals>
									<goal>replace</goal>
								</goals>
								<configuration>
									<basedir>${installer-build-path}</basedir>
									<includes>
										<include>${autoupdate-xml-file-name}</include>
										<include>${installbuilder-updater-file-name}</include>
										<include>java.xml</include>
									</includes>
									<regex>false</regex>
									<replacements>
					                    <replacement>
											<token><![CDATA[%JRE_VERSION_FULL%]]></token>
											<value>${installer.jre.version.full}</value>
										</replacement>
										<replacement>
											<token><![CDATA[%JRE_VERSION_MAJOR%]]></token>
											<value>${installer.jre.version.major}</value>
										</replacement>
										<replacement>
											<token><![CDATA[%JRE_VERSION%]]></token>
											<value>${installer.jre.version}</value>
										</replacement>
										<replacement>
											<token>PROJECT_VERSION</token>
											<value>${project.version}</value>
										</replacement>
										<replacement>
											<token>VERSION_ID</token>
											<value>${installer-version-id}</value>
										</replacement>
										<replacement>
					                        <token>VERSION</token>
					                        <value>${project.version}</value>
					                    </replacement>
					                    <replacement>
											<token>UPDATE_XML_URL</token>
											<value>${collect.update_2.url}</value> <!-- use new url in update.ini -->
										</replacement>
									</replacements>
								</configuration>
							</execution>
						</executions>
					</plugin>
					
					<!-- 4. iterate over platforms and generate updaters -->
					<plugin>
						<groupId>com.soebes.maven.plugins</groupId>
						<artifactId>iterator-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>download-jre</id>
								<phase>process-sources</phase>
								<goals>
									<goal>iterator</goal>
								</goals>
								<configuration>
									<pluginExecutors>
										<!-- download and extract jre -->
										<pluginExecutor>
											<plugin>
												<groupId>org.apache.maven.plugins</groupId>
												<artifactId>maven-dependency-plugin</artifactId>
											</plugin>
											<goal>unpack</goal>
											<configuration>
												<artifactItems>
													<artifactItem>
														<groupId>com.oracle.java</groupId>
														<artifactId>jre</artifactId>
														<version>${installer.jre.version.full}</version>
														<classifier>${jre.classifier}</classifier>
														<type>zip</type>
														<overWrite>false</overWrite>
														<outputDirectory>${installer-build-path}/jre_files</outputDirectory>
													</artifactItem>
												</artifactItems>
											</configuration>
										</pluginExecutor>
									</pluginExecutors>
								</configuration>
							</execution>
							<execution>
								<id>execute-installer</id>
								<phase>package</phase>
								<goals>
									<goal>iterator</goal>
								</goals>
								<configuration>
									<pluginExecutors>
										<!-- 4. execute InstallBuilder to produce the updaters -->
										<pluginExecutor>
											<plugin>
												<groupId>org.codehaus.mojo</groupId>
												<artifactId>exec-maven-plugin</artifactId>
												<version>1.1</version>
											</plugin>
											<goal>exec</goal>
											<configuration>
												<skip>${installer.skip}</skip>
												<executable>${installbuilder.home}/bin/${installbuilder.builder.executable}</executable>
												<arguments>
													<argument>build</argument>
													<argument>${installer-build-path}/${installbuilder-updater-file-name}</argument>
													<argument>@item@</argument>
												</arguments>
											</configuration>
										</pluginExecutor>
										<!-- 5. move generated updaters into the target folder -->
										<pluginExecutor>
											<plugin>
												<groupId>org.apache.maven.plugins</groupId>
												<artifactId>maven-antrun-plugin</artifactId>
											</plugin>
											<goal>run</goal>
											<configuration>
												<skip>${installer.skip}</skip>
												<target>
													<move file="${installbuilder.builder.output}/${installbuilder.project.name}-${installer-version-id}-${installer.classifier}-installer.${installer.extension}" tofile="${project.build.directory}/${installer.classifier}-updater.${installer.extension}" failonerror="true" />
												</target>
											</configuration>
										</pluginExecutor>
										<!-- 6. attach updaters as artifact -->
										<pluginExecutor>
											<plugin>
												<groupId>org.codehaus.mojo</groupId>
												<artifactId>build-helper-maven-plugin</artifactId>
											</plugin>
											<goal>attach-artifact</goal>
											<configuration>
												<skipAttach>${installer.skip}</skipAttach>
												<artifacts>
													<artifact>
														<file>${project.build.directory}/${installer.classifier}-updater.${installer.extension}</file>
														<classifier>${installer.classifier}</classifier>
														<type>${installer.extension}</type>
													</artifact>
												</artifacts>
											</configuration>
										</pluginExecutor>
									</pluginExecutors>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>publishupdater</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<!-- 7 Upload the XML file that defines the presence of updates to 
								the FTP directory -->
							<execution>
								<phase>install</phase>
								<configuration>
									<target>
										<property name="host" value="${collect.autoupdater.ftp.host}" />
										<property name="username" value="${collect.autoupdater.ftp.username}" />
										<property name="password" value="${collect.autoupdater.ftp.password}" />
										<property name="remote_folder" value="${collect.autoupdater.ftp.remotefolder}" />
										<property name="local_folder" value="${installer-build-path}" />
										<property name="file_name" value="${autoupdate-xml-file-name}" />
										<ant antfile="${installer-build-path}/ant_ftp_upload.xml" />
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>com.jcraft</groupId>
								<artifactId>jsch</artifactId>
								<version>0.1.51</version>
							</dependency>
							<dependency>
								<groupId>org.apache.ant</groupId>
								<artifactId>ant-jsch</artifactId>
								<version>1.9.4</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	
	<dependencies>
		<dependency>
			<groupId>org.openforis.collect</groupId>
			<artifactId>collect-control-panel</artifactId>
			<version>${project.version}</version>
		</dependency>
	</dependencies>
</project>
